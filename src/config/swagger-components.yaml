components:
  #==================================================================
  # SCHEMAS (Modelos de Dados)
  #==================================================================
  schemas:
    Profissional:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nome:
          type: string
        email:
          type: string
          format: email
    Servico:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nome:
          type: string
        descricao:
          type: string
        preco:
          type: number
          format: float
        duracao:
          type: integer
    HorarioDisponivel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        diaDaSemana:
          type: integer
          description: '0=Domingo, 1=Segunda, etc.'
        horaInicio:
          type: string
          format: time
          example: '09:00'
        horaFim:
          type: string
          format: time
          example: '18:00'
        profissionalId:
          type: string
          format: uuid
    Agendamento:
      type: object
      properties:
        id:
          type: string
          format: uuid
        data:
          type: string
          format: date-time
        status:
          type: string
          enum: [Confirmado, Cancelado, Realizado]
        nomeCliente:
          type: string
        telefoneCliente:
          type: string
        profissional:
          $ref: '#/components/schemas/Profissional'
        servico:
          $ref: '#/components/schemas/Servico'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string

  #==================================================================
  # PARAMETERS (Parâmetros de URL reutilizáveis)
  #==================================================================
  parameters:
    IdFromPath:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: O ID do recurso.
    ProfissionalIdFromPath:
      in: path
      name: profissionalId
      required: true
      schema:
        type: string
        format: uuid
      description: O ID do profissional.

  #==================================================================
  # REQUEST BODIES (Corpos das Requisições)
  #==================================================================
  requestBodies:
    ProfissionalBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              nome:
                type: string
              email:
                type: string
                format: email
            example:
              nome: "Dr. Gregory House"
              email: "house@example.com"
    ServicoBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              nome:
                type: string
              descricao:
                type: string
              preco:
                type: number
              duracao:
                type: integer
            example:
              nome: "Limpeza de Pele"
              descricao: "Limpeza profunda."
              preco: 120
              duracao: 60
    HorarioBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              diaDaSemana:
                type: integer
              horaInicio:
                type: string
                format: time
              horaFim:
                type: string
                format: time
            example:
              diaDaSemana: 1
              horaInicio: "09:00"
              horaFim: "18:00"
    AgendamentoBody:
      required: true
      content:
        application/json:
          schema:
            type: object