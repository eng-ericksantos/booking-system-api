// Este é o seu arquivo de schema do Prisma.
// Saiba mais sobre ele em https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StatusAgendamento {
  Confirmado
  Cancelado
  Realizado
}

enum Role {
  ADMIN
  PROFISSIONAL
}

model Usuario {
  id           String  @id @default(uuid())
  email        String  @unique
  senha        String
  role         Role    @default(PROFISSIONAL)
  
  // Relação opcional com Profissional
  profissional Profissional?
}

model Servico {
  id        String @id @default(uuid())
  nome      String
  descricao String
  duracao   Int // duracao em minutos
  preco     Float
  agendamentos  Agendamento[] // Um serviço pode ter vários agendamentos
}

model Profissional {
  id        String @id @default(uuid())
  nome      String
  horariosDisponiveis HorarioDisponivel[] // Um profissional tem vários horários
  agendamentos        Agendamento[]
  usuarioId String  @unique // Cada profissional está ligado a um único usuário
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model HorarioDisponivel {
  id              String @id @default(uuid())
  diaDaSemana     Int // // 0 = Domingo, 1 = Segunda, ..., 6 = Sábado
  horaInicio      String // Formato "HH:mm" 
  horaFim         String // Formato "HH:mm"
  profissionalId  String
  profissional    Profissional @relation(fields: [profissionalId], references: [id])
}

model Agendamento {
  id              String @id @default(uuid())
  data            DateTime
  status          StatusAgendamento @default(Confirmado) // Ex: Confirmado, Cancelado, Realizado
  nomeCliente     String
  telefoneCliente String
  servicoId       String
  servico         Servico @relation(fields: [servicoId], references: [id])
  profissionalId  String
  profissional    Profissional @relation(fields: [profissionalId], references: [id])
  createdAt       DateTime @default(now()) // Valor padrão será a data e a hora exatas do momento da criação do registro
  updateAt        DateTime @updatedAt // Data e hora atuais toda vez que o registro for modificado
}
